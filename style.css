:root {
  --White: hsl(0, 0%, 100%);
  --Light-pink: hsl(275, 100%, 97%);
  --Grayish-purple: hsl(292, 16%, 49%);
  --Dark-purple: hsl(292, 42%, 14%);
}

* {
  font-family: "Work Sans", sans-serif;
}

h2,
p {
  margin: 0;
}

body {
  min-height: 100vh;
  margin: 0;
}

.faq-background {
  position: relative;
  display: grid;
  grid-template-rows: 1fr 2fr;
  width: 100%;
  height: 100vh;
}

.faq-background-top {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
}

.faq-background-top > img {
  height: 100%;
  width: 100%;
}

.faq-background-bottom {
  position: relative;
  background-color: var(--Light-pink);
}

.faq-container {
  position: absolute;
  top: -18%;
  left: 35%;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  width: 400px;
  height: auto;
  gap: 20px;
  padding: 30px;
  background-color: var(--White);
  border-radius: 10px;
  box-shadow: 0px 0px 50px rgba(0, 0, 0, 0.1);
}

.faq-header {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  gap: 15px;
}

.faq-icon {
  display: flex;
  justify-content: center;
  align-items: center;
}

.faq-icon > img {
  height: 35px;
}

.faq-header > h2 {
  font-size: 45px;
  font-weight: 700;
}

.faq-item {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  gap: 10px;
  width: 100%;
}

.faq-question {
  display: flex;
  justify-content: space-between;
  align-items: center;
  gap: 30px;
  width: 100%;
  background-color: transparent;
  border: none;
  cursor: pointer;
  font-size: 14px;
  font-weight: 700;
  padding: 0;
  text-align: left;
}

.faq-question:hover {
  color: purple;
}

.faq-toggle-icon {
  transition: all 0.2s ease-in-out;
}

.faq-toggle-icon:hover {
  transform: scale(1.3);
}

.faq-answer {
  font-size: 14px;
  color: var(--Grayish-purple);
  letter-spacing: 0.05cap;
  line-height: 1.3;
  display: none;
  animation: growth-down 0.2s ease-in-out;
}

@keyframes growth-down {
  from {
    transform: scale(0.5);
    transform-origin: top;
  }
  to {
    transform: scale(1);
    transform-origin: top;
  }
}

.displayBlock {
  display: block;
}
